#INCLUDE "include\inc_main_bas.h"
*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: UtlStrSubNCmn
*----------------------------------------------------------------------------------------
PROCEDURE UtlStrSubNCmn
LPARAMETERS _lcString, _lnIndex, _lcDelimiter
*----------------------------------------------------------------------------------------
* Описание.......: Процедура выбирает из строки _lcString подстроку под номером _lnIndex
*                  (по умолчанию 1)подстроки разделены символом _lcDelimiter
*                  (по умолчанию ';')
*----------------------------------------------------------------------------------------
* Параметры......: _lcString	- исходная строка для обработки
*                  _lnIndex	- номер индекса подстроки, по умолчанию 1
*                  _lcDelimiter - разделитель подстрок, по умолчанию ";"
*
* Возвращает.....: Character Возвращает заданную подстроку из строки, или пустую строку
*							 в случае любой ошибки.
*----------------------------------------------------------------------------------------
* Создание.......: Гринько Сергей    09.07.2001
* Модификация....: 
*----------------------------------------------------------------------------------------

	LOCAL _i, _j, _l		&& временные переменные

	IF VARTYPE(_lcString)   # 'C' ;
	   OR VARTYPE(_lnIndex) # 'N' ;
	   OR _lnIndex < 1

		*   Ошибка параметров
		RETURN ''

	ENDIF
	_lcDelimiter = IIF(VARTYPE(_lcDelimiter) # 'C' OR _lcDelimiter == '', ';', ;
													  					_lcDelimiter)

	IF _lnIndex = 1
		_i = 1
	ELSE
		_i = AT(_lcDelimiter, _lcString, _lnIndex - 1)
		IF _i == 0
			RETURN ''
		ELSE
			_i = _i + 1
		ENDIF
	ENDIF
	_j = AT(_lcDelimiter, _lcString, _lnIndex)
	IF _j == 0
		_j = LEN(_lcString) + 1
	ENDIF
	RETURN IIF(_i < _j, SUBSTR(_lcString, _i, _j - _i),;
						'')
ENDPROC

*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: NfoMemLinesCmn
*----------------------------------------------------------------------------------------
FUNCTION NfoMemLinesCmn
LPARAMETERS _lcMemo
*----------------------------------------------------------------------------------------
* Описание.......: Заменяет стандартную функцию memlines(). Нет ограничений по 
*                  SET MEMOWIDTH TO Считает истинное количество строк разделенных
*                  символом <ENTER>. 
*----------------------------------------------------------------------------------------
* Параметры......: _lcMemo	- Исходная строка для обработки
* Возвращает.....: Numeric	число найденных жестких строк
*----------------------------------------------------------------------------------------
* Создание.......: Гринько Сергей    09.07.2001
* Модификация....: 
*----------------------------------------------------------------------------------------
	IF EMPTY(_lcMemo)
		* для пустой строки возвращаем количество строк = 0
		RETURN 0
	ELSE
		RETURN OCCURS(CR,_lcMemo) + ;
			   IIF(RIGHT(_lcMemo,1) == CR, 0, ;
		  								   IIF(RIGHT(_lcMemo,2) == CR+CHR(10), 0, ;
																			   1))
	ENDIF
ENDFUNC

*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: NfoStrHeightCmn
*----------------------------------------------------------------------------------------
PROCEDURE NfoStrHeightCmn
LPARAMETERS _lcFontName, _lnFontSize, _lcFontStyle, _llInterval
*----------------------------------------------------------------------------------------
* Описание.......: Возвращает высоту текста в пикселах для заданного шрифта
*                  с учетом или без межстрочного интервала
*----------------------------------------------------------------------------------------
* Параметры......: _lcFontName  - имя шрифта
*                  _lnFontSize  - размер шрифта
*                  _lnFontStyle - стиль шрифта (может отсутствовать)
*                  _llInterval  - признак учета межстрочного интервала
*
* Возвращает.....: Numeric	Высоту текста в пикселах
*----------------------------------------------------------------------------------------
* Создание.......: Гринько Сергей    09.07.2001
* Модификация....: 
*----------------------------------------------------------------------------------------
	IF VARTYPE(_lcFontStyle) # 'C'
		_lcFontStyle = ''
	ENDIF
	RETURN IIF(_llInterval, FONTMETRIC(4,_lcFontName, _lnFontSize, _lcFontStyle), 0) + ;
		   FONTMETRIC(1,_lcFontName, _lnFontSize, _lcFontStyle)
ENDPROC

*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: UtlRndLabel
*----------------------------------------------------------------------------------------
FUNCTION UtlRndLabel
LPARAMETERS _lcPrefix
*----------------------------------------------------------------------------------------
* Описание.......: Генерация уникального (в пределах копии приложения) символьного
*                  идентификатора
*----------------------------------------------------------------------------------------
* Параметры......: _lcPrefix - Префикс идентификатора. Будет вставлен в начало 
*                              полученного идентификатора
* Возвращает.....: Character строка длинной 10 символов
*----------------------------------------------------------------------------------------
* Создание.......: Алексей Мироненко 04.07.2001 
* Модификация....: 
*----------------------------------------------------------------------------------------
	LOCAL _lcLabel		&& уникальная метка

	* получение уникальной метки вызовом VFP функции и добавление к ней заданного префикса
	_lcLabel	= SYS(2015)
	RETURN 	IIF( EMPTY(_lcPrefix), _lcLabel, ;
						PADR(_lcPrefix + RIGHT(_lcLabel, 10 - LEN(_lcPrefix) ) ,10)	  ;
				)
ENDFUNC

*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: NfoAtNotCmn
*----------------------------------------------------------------------------------------
FUNCTION NfoAtNotCmn
LPARAMETERS _lcChar,_lcString
*----------------------------------------------------------------------------------------
* Описание.......: Поиск первой позици начиная с левого края в строке
*                  такого символа который отличается от заданного
*                  для строки состоящей только из указанных символов
*                  например _lcChar='1' и _lcString='1111' возвращает номер следующего
*                  несуществующего символа в строке. То есть ее длина + 1 = 5
*                  для пустой строки возвращается 1
*----------------------------------------------------------------------------------------
* Параметры......: _lcChar	 - искомый символ
*                  _lcString - строка в которой ищем
*
* Возвращает.....: Numeric	индекс найденного символа + 1
*----------------------------------------------------------------------------------------
* Создание.......: Гринько Сергей 09.07.2001
* Модификация....: 
*----------------------------------------------------------------------------------------
	LOCAL _i	&& искомая позиция
	
	FOR _i = 1 TO LEN(_lcString)
		IF _lcChar # SUBSTR(_lcString, _i, 1)
			* нашли внутри строки
			RETURN _i
		ENDIF
	ENDFOR
	
	* за пределами строки
	RETURN _i
	
ENDFUNC

*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: FmtUpperCmn
*----------------------------------------------------------------------------------------
FUNCTION FmtUpperCmn
LPARAMETERS _lcString
*----------------------------------------------------------------------------------------
* Описание.......: Преобразование в верхний регистр с учетом русских букв
*----------------------------------------------------------------------------------------
* Параметры......: _lcString - исходная строка для обработки
* Возвращает.....: Character   строка текста все символы которой приведены к 
*                              верхнему регистру
*----------------------------------------------------------------------------------------
* Создание.......: Гринько Сергей 09.07.2001
* Модификация....: 
*----------------------------------------------------------------------------------------
	RETURN CHRTRAN(_lcString, ;
				'qwertyuiopasdfghjklzxcvbnmйцукеёнгшщзхъфывапролджэячсмитьбю',;
				'QWERTYUIOPASDFGHJKLZXCVBNMЙЦУКЕЁНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ')
ENDFUNC

*----------------------------------------------------------------------------------------
* Программа......: prg_utility_bas.prg
* Класс..........: 
* Процедура......: UtlFontSet
*----------------------------------------------------------------------------------------
PROCEDURE UtlFontSet
LPARAMETERS _loObject, _lcFontSizeStyle
*----------------------------------------------------------------------------------------
* Описание.......: Принимает указатель на объект и описание шрифта по стандарту WINDOWS.
*                  Прописывает в объект имя шрифта его размер и стиль отображения.
*                  Любая часть из описания шрифта может быть опущена, при этом эта часть
*                  в описании объекта не изменяется.
*                  Пример описания : "Arial,10,BIO"
*----------------------------------------------------------------------------------------
* Параметры......: _loObject 		- ссылка на анализируемый объект
*                  _lcFontSizeStyle	- строка текста с информацией по шрифту 
*                                     в стандарте WINDOWS
* Возвращает.....: Logical	всегда возращает .T.
*----------------------------------------------------------------------------------------
* Создание.......: Гринько Сергей 09.07.2001
* Модификация....: Гринько Сергей 25.06.2006	Оптимизация. Изменен разбор строки _lcFontSizeStyle
*												Все назначения свойствам сделаны с предварительной
*												проверкой на необходимость выполнения
*----------------------------------------------------------------------------------------
	LOCAL _lcFont, _lnSize, _lcStyle			&& параметры шрифта
	LOCAL _lnI1, _lnI2							&& позиции запятых

	* шрифт его размер и стиль по умолчанию
	STORE '' TO _lcFont, _lnSize, _lcStyle
	
	IF VARTYPE(_lcFontSizeStyle) = 'C' ;
	   AND !EMPTY(_lcFontSizeStyle)
	   	* разбираем по частям
	   	_lcFontSizeStyle = _lcFontSizeStyle+','
	   	* шрифт
	   	_lnI1    = AT(',',_lcFontSizeStyle)
		_lcFont  = LEFT(_lcFontSizeStyle,_lnI1-1)
		* размер
		_lnI2    = AT(',',_lcFontSizeStyle, 2)
		_lnSize  = SUBSTR(_lcFontSizeStyle, _lnI1+1, _lnI2-_lnI1-1)
		* стиль
		_lcStyle = UPPER(SUBSTR(_lcFontSizeStyle, _lnI2+1, AT(',',_lcFontSizeStyle,3)-_lnI2-1))
	ENDIF
	
	WITH _loObject

		* шрифт
		IF !EMPTY(_lcFont) AND .FONTNAME != _lcFont
			.FONTNAME = _lcFont
		ENDIF

		* его размер, не может быть меньше 6 пунктов
		IF !EMPTY(_lnSize) 
			_lnSize = VAL(_lnSize)
			_lnSize = IIF(_lnSize < 6, 6, _lnSize)
			IF .FONTSIZE != _lnSize
				.FONTSIZE = _lnSize
			ENDIF
		ENDIF

		* стиль
		IF !EMPTY(_lcStyle)
			IF .FONTBOLD != ('B' $ _lcStyle)
				.FONTBOLD = ('B' $ _lcStyle)
			ENDIF 
			IF .FONTOUTLINE != ('O' $ _lcStyle)
				.FONTOUTLINE = ('O' $ _lcStyle)
			ENDIF 
			IF .FONTITALIC != ('I' $ _lcStyle)
				.FONTITALIC = ('I' $ _lcStyle)
			ENDIF 
			IF .FONTUNDERLINE != ('U' $ _lcStyle)
				.FONTUNDERLINE = ('U' $ _lcStyle)
			ENDIF 
			IF .FONTSTRIKETHRU != ('-' $ _lcStyle)
				.FONTSTRIKETHRU = ('-' $ _lcStyle)
			ENDIF 
			IF .FONTSHADOW != ('S' $ _lcStyle)
				.FONTSHADOW = ('S' $ _lcStyle)
			ENDIF 
			IF VARTYPE(.BACKSTYLE) = 'N'
				IF .BACKSTYLE != IIF('T' $ _lcStyle, 0, 1)
					.BACKSTYLE = IIF('T' $ _lcStyle, 0, 1)
				ENDIF 
			ENDIF
		ENDIF
	ENDWITH
	RETURN
ENDPROC

